openapi: 3.0.0

info:
  version: "1.0.0"
  title: live-message
  description: The API for the live-message project.

servers:
  - url: 'https://onemessage.onrender.com'
    description: 'Production server'
paths:
  /keep_alive:
    get:
      tags:
        - Server Status
      summary: Checks if the server is alive.
      operationId: getServerStatus
      responses:
        "200":
          description: "Server is online and healty"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server is alive"
        "500":
          description: "Server is ded"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  /new:
    post:
      summary: Create a new user.
      description: This endpoint creates a new user by accepting and processing the username and password. If the username is already taken, it will respond with a 409 status code.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - password
              properties:
                userName:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: User created successfully. Returns user ID along with access and refresh tokens as cookies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: string
                    example: "uu-id"
        "409":
          description: Username already taken.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Username already taken. Please choose a different username.

        "400":
          description: Bad request. Username or password is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Server error. Returns error message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: error message
      tags:
        - /user

  /login:
    post:
      tags:
        - /user
      summary: User login
      description: This endpoint is used for user login.
      operationId: loginUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                password:
                  type: string
              required:
                - userName
                - password
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: string
                    example: "uu-id"

        "401":
          description: Wrong password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid password

        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "error message"

  /refresh:
    post:
      tags:
        - /user
      summary: Refresh Access Token
      description: Endpoint to refresh the access token using the provided refresh token.
      parameters:
        - name: refreshToken
          in: cookie
          required: true
          schema:
            type: string
          description: The refresh token used to refresh the access token.
      responses:
        "200":
          description: Access token refreshed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access token refreshed successfully.
        "401":
          description: Unauthorized - Missing or invalid refresh token in the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid refresh token.
        "403":
          description: Forbidden - Failed to refresh the access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to refresh the access token.

tags:
  - name: Server Status
    description: Server status endpoints

  - name: /user
    description: User endpoints are subject to the user input validation middleware. Check the documentation for more information.
